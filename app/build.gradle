apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"


    defaultConfig {
        applicationId "keno.android.ui.sample"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "HOST", '"https://xiaomi.com"')
    }

    signingConfigs {
        release {
            storeFile file('../androidUi.jks')
            storePassword "zxc@1234"
            keyAlias "androiduikey"
            keyPassword "zxc@1234"
        }
    }

    buildTypes {
        release {
            minifyEnabled true    //代码混淆
            shrinkResources true  //无效资源文件清理
            zipAlignEnabled true  //压缩
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            //混淆规则
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    flavorDimensions  "channel","ndkConfig"
    productFlavors {
        /*
        //渠道包
        xiaomi {
            dimension "channel"
        }
        huawei {
            dimension "channel"
        }
        vivo {
            dimension "channel"
        }
        oppo {
            dimension "channel"
        }

        //ndk架构分包
        arm32 {
            dimension "ndkConfig"
            ndk {
                abiFilters "armeabi-v7a"
            }
        }
        */
/*
        arm64 {
            dimension "ndkConfig"
            ndk {
                abiFilters "arm64-v8a"
            }
        }

        armMix {
            //兼容模式
            dimension "ndkConfig"
            ndk {
                abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
            }
        }
       */
    }

    productFlavors.all {
        flavor ->
            if ("channel" == flavor.dimension) {
                flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
            }
    }


}

android.applicationVariants.all {
    v ->
        v.outputs.all {
            output ->
                if ("release" == v.buildType.name) {
                    //输出路径
                    def outputFileDir = "${project.projectDir.absolutePath}/ApkOutput/${v.buildType.name}_${v.versionName}"
                    //输出文件名
                    def fileName = "v${v.versionName}_${v.buildType.name}_${v.flavorName}_${new Date().format("yyyyMMdd_HHmmss")}.apk"
                    outputFileName = fileName
                    v.packageApplication.outputDirectory = new File(outputFileDir)
                }
        }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.annotation:annotation:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
}
